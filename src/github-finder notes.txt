JSX:
 HTML AND CSS like.

 JSX must have 1 parent element.



Passing Props

1. static method:
Instead of passing types to the imported component, we just type a static method
in the component it self:

static defaultProps = {
          icon: "fab fa-github",
          title: "Github finder"
     }

2 PropTypes:
PropTypes checks all components.

Inside a CLASS component:

import PropTypes from "prop-types"

static propTypes = {
     title: propTypes.string.isRequired,
     icon: propTypes.string,isRequired
}

In a STATELESS component:

import PropTypes from "prop-types"

Now, outside the component scope:

ComponentName.propTypes = {
     title: propTypes.string.isRequired,
     icon: propTypes.string,isRequired
}

component-level state vs app-level state:
a component-level state resides inside the component itself, while
an app-level state resides in App.js

.map is a high order array method.

Async

for functions, we place async right before the func name

async componentDidMount() => {

}

for arrow functions, we place async right before the function parameters

searchUsers = async (event) => {

}


===================================
ES7 React extension shortcuts:

rce : creates a React class component
racf: calls a functional component.

impt: calls PropTypes
ptor: calls PropTypes.object.isRequired,
ptsr: calls PropTypes.string.isRequired,
ptar: calls an array, 
..et

Github Rest API

https://developer.github.com/v3/search/#search-code

? for the 1st query
& for the 2nd query
q for query search 

repos?per_page=5&sort=created:asc is Githut API for customizing # of repos displayed:
repos repos
per_page=5  No. of items displayed (5 repos)
sort=created:asc   sort top 5 in an ascending order  (top to bottom based on created date).

========================

Context

We start creating  'context' folder under /src/
Inside /src/context/ create a file named types.js.
Create a sub folder src/context/github, and there create 3 files:
githubContext.js, GithubReducer.js, GithubState.jsx.

in githubContext.js:

import {createContext} from react;

const githubContext = createContext();

export default githubContext;


in GithubState.jsx

import React, { useReducer } from "react";
import githubReducer from "./githubReducer.js";

const GithubState = () => {
     const INITIAL_STATE = {
       users: [],
          user: {},
          repos: [],
          loading: false
}

const [state, dispatch] = useReducer(githubReducer, INITIAL_STATE);

return <githubContext
     value = {{
          users: state.users,
          user: state.user,
          repos: state.repos,
          loading: state.loading
     }}
     >
          {props.children}
     </githubContext>

}
export default GithubState;


NOTE:  We use render={ () => { }}  in routing in case we needed to pass props or 
render more than 1 component in the same path, or set a conditional.
